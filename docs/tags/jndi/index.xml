<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jndi on Blame Laird</title>
    <link>https://ljnelson.github.io/tags/jndi/</link>
    <description>Recent content in jndi on Blame Laird</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>ljnelson@gmail.com (Laird Nelson)</managingEditor>
    <webMaster>ljnelson@gmail.com (Laird Nelson)</webMaster>
    <lastBuildDate>Thu, 30 Dec 2021 16:22:37 -0800</lastBuildDate><atom:link href="https://ljnelson.github.io/tags/jndi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java Configuration: JNDI and Naming Operations</title>
      <link>https://ljnelson.github.io/blog/java-configuration-jndi-and-naming-operations/</link>
      <pubDate>Thu, 30 Dec 2021 16:22:37 -0800</pubDate>
      <author>ljnelson@gmail.com (Laird Nelson)</author>
      <guid>https://ljnelson.github.io/blog/java-configuration-jndi-and-naming-operations/</guid>
      <description>Table Of Contents  Background and Rationale What&amp;rsquo;s In A (Naming Service) Name?  The Object Management Group Naming Service Specification   JNDI  Bootstrapping Retrieval Operations Binding Operations Name-to-Object Bindings Synthesizing Operations  ObjectFactory   Event Operations   Putting It All Together JNDI Flaws  No Generics Binding and Lookup Services Colocated Vague Qualifiers Too Many Checked Exceptions Can&amp;rsquo;t Use Class or Type as a Selector Strange Service Provider Location Machinery Too Much Hierarchy   Conclusion What&amp;rsquo;s Next    Background and Rationale I&amp;rsquo;ve written previously about how Java configuration systems, boiled down to their essence, are simply systems for loading Java objects that are described in a particular way, usually by some kind of name (along with qualifiers), and that such systems have absolutely nothing to do with dependency injection or object binding or all the rest of the shiny but irrelevant things people like to get excited about in this space.</description>
    </item>
    
  </channel>
</rss>
